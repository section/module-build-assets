user www-data;
worker_processes 1;

# set open fd limit to 30000
worker_rlimit_nofile 30000;

pid /var/run/nginx.pid;

events {
    worker_connections 10000;
    multi_accept on;
}

http {

    client_max_body_size 0; # Don't limit, allow the edge to protect this

    ##
    # Basic Settings
    ##

    proxy_http_version 1.1;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 195;
    types_hash_max_size 2048;

    ##
    # Virtual Host Configs
    ##

    log_format section_combined escape=json '{'
        '"time":"$time_iso8601",'
        '"time_taken_ms":"$request_time",'
        '"request":"$request",'
        '"status":"$status",'
        '"bytes":"$bytes_sent",'
        '"response_body_bytes":"$body_bytes_sent",'
        '"content_type":"$sent_http_content_type",'
        '"hostname":"$http_host",'
        '"referrer":"$http_referer",'
        '"useragent":"$http_user_agent",'
        '"http_x_forwarded_proto":"$http_x_forwarded_proto",'
        '"upstream_status":"$upstream_status",'
        '"upstream_addr":"$upstream_addr",'
        '"section_io_id":"$http_section_io_id"}';

    access_log /var/log/nginx/access.log section_combined;
    error_log /var/log/nginx/error.log error;

    server_names_hash_bucket_size 128; #Increased to 128 to support long hostnames
    server_tokens off; #Stop sending default nginx Server header

    #add proxy buffers to resolve upstream server header too big error
    proxy_buffer_size   128k;
    proxy_buffers  4 256k;
    proxy_busy_buffers_size   256k;

    #Set the proxy timeouts so that nginx always fails before ELB, showing the friendly error page
    proxy_connect_timeout 60s;
    proxy_send_timeout  120s;
    proxy_read_timeout  120s;

    # calculate the Connection request header value to support websockets
    map $http_upgrade $proxy_set_header_connection {
        websocket Upgrade; # support Websockets
        default ''; # Clear Connection request header by default for use with upstream keepalive.
    }

    underscores_in_headers on;

    server {
        listen 80;

        location / {
            proxy_set_header X-Forwarded-For $http_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
            proxy_set_header Host $host;
            proxy_pass http://next-hop;
        }
    }
}
